@model Orderly.Models.ContactCreate

@{
    ViewBag.Title = "Create";
    var val = TempData["Key Value"];
    var personnelId = (int)val;
}

@using (Html.BeginForm("Create", "Contact", new { id = Model.PersonnelId }))
{
    @Html.AntiForgeryToken()

    <form>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.LabelFor(model => model.PersonnelId, htmlAttributes: new { @class = "control-label col font-weight-bold" })
        @Html.DisplayFor(model => personnelId)

        <div class="container">
            <div class="row my-3 ml-lg-2">
            </div>
            <div class="card col p-0 border-success">
                <div class="card-header mb-3">
                    <h4 class="card-title mb-1">
                        Add Contact & Vehicle
                    </h4>
                </div>
                <div class="form-row">
                    <div class="form-group col-md mr-md-2 mr-lg-0">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                        <div class="col">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.MilEmail, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                        <div class="col">
                            @Html.EditorFor(model => model.MilEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MilEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.PersonalEmail, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                        <div class="col">
                            @Html.EditorFor(model => model.PersonalEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PersonalEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.HasDriversLicense, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                        <div class="col">
                            @Html.EditorFor(model => model.HasDriversLicense, new { htmlAttributes = new { @class = "form-control-sm" } })
                            @Html.ValidationMessageFor(model => model.HasDriversLicense, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.VehicleMake, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VehicleMake, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VehicleMake, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.VehicleModel, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VehicleModel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VehicleModel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.VehicleColor, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VehicleColor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VehicleColor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.VehiclePlate, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VehiclePlate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VehiclePlate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-transparent border-0">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save & Continue" class="btn btn-outline-success" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
