@model Orderly.Models.UnitInfoEdit

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutDetail.cshtml";
}

@{
    string created = Model.CreatedUtc.ToString("MM/dd/yyyy, HH:mm:ss");
    string modified = Model.ModifiedUtc.HasValue ? Model.ModifiedUtc.Value.ToString("MM/dd/yyyy, HH:mm:ss") : "";
    string arrived = Model.Arrived.ToString("MM/dd/yyyy");
    string loss = Model.LossDate.HasValue ? Model.LossDate.Value.ToString("MM/dd/yyyy") : "";
    string blank = "";
    var platoon = Model.Team.Squad.Platoon;
    var squad = Model.Team.Squad;
}


@using (Html.BeginForm("EditUnitInfo", "Record", new { id = Model.PersonnelId }))
{
    @Html.AntiForgeryToken()

    <form>
        <div class="jumbotron jumbotron-fluid pl-4 bg-transparent mb-0 pb-1">
            <a class="btn mb-2 text-primary text-decoration-none" href="@Url.Action("Details","Record",new { id = Model.PersonnelId })"><i class="fa fa-2x fa-backward pt-2 fa-align-center"></i><span class="h4 font-weight-normal ml-3">Go Back</span></a>
            <br />
            <i class="fa fa-2x fa-area-chart pr-2"></i><h2 class="pl-2 d-inline">@*@Html.DisplayFor(model => model.LastName), @Html.DisplayFor(model => model.FirstName)&nbsp;<span class="d-none d-sm-inline px-2">|</span>&nbsp;@Html.DisplayFor(model => rank)*@ Placeholder Bullshit</h2>
            <hr class="" />
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonnelId)
        <div class="form-group">
        </div>

        <div class="container">
            <div class="row my-3 ml-lg-2">
            </div>
            <div class="card col p-0 border-info">
                <div class="card-header mb-3">
                    <h4 class="card-title mb-1">
                        Editing Contact/Vehicle Record
                    </h4>
                </div>
                <div class="form-row">
                                        <div class="form-group col-md mr-md-2 mr-lg-0">
                            @Html.LabelFor(model => model.Team.Squad.Platoon, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                            <div class="col">
                                @Html.EditorFor(model => platoon.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => platoon.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md">
                            @Html.LabelFor(model => model.Team.Squad, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                            <div class="col">
                                @Html.EditorFor(model => squad.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => squad.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md">
                            @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                            <div class="col">
                                @Html.EditorFor(model => model.Team.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Team.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                                        <div class="form-group col-md">
                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col font-weight-bold" })
                        <div class="col">
                            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control-sm" } })
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.Arrived, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => arrived, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => arrived, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.LossDate, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LossDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LossDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md">
                        @Html.LabelFor(model => model.DutyStatus, htmlAttributes: new { @class = "control-label col-md font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DutyStatus, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DutyStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md">
                        <span class="small">
                            @Html.DisplayNameFor(model => model.CreatedByUserName)
                            :
                            @Html.DisplayFor(model => model.CreatedByUserName)
                            <br />
                            @Html.DisplayNameFor(model => model.CreatedUtc)
                            :
                            @Html.DisplayFor(model => created)
                        </span>
                    </div>
                    <div class="col-md">
                        <span class="small">
                            @Html.DisplayNameFor(model => model.ModifiedByUserName)
                            :
                            @Html.DisplayFor(model => model.ModifiedByUserName)
                            <br />
                            @Html.DisplayNameFor(model => model.ModifiedUtc)
                            :
                            @Html.DisplayFor(model => modified)
                        </span>
                    </div>
                </div>

            </div>
        </div>
    </form>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
