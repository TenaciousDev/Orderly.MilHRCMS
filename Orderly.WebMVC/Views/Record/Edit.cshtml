@model Orderly.Models.RecordEdit

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutDetail.cshtml";
}
@{
    string rank = Model.Rank.ToString();
    string dob = Model.DOB.ToString("MM/dd/yyyy");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <form>
        <div class="jumbotron jumbotron-fluid pl-4 bg-transparent mb-0 pb-1">
            <a class="btn mb-2 text-primary text-decoration-none" href="@Url.Action("Details","Record",new { id = Model.PersonnelId })"><i class="fa fa-2x fa-backward pt-2 fa-align-center"></i><span class="h4 font-weight-normal ml-3">Go Back</span></a>
            <br />
            <i class="fa fa-2x fa-user pr-2"></i><h2 class="pl-2 d-inline">@Html.DisplayFor(model => model.LastName), @Html.DisplayFor(model => model.FirstName)&nbsp;<span class="d-none d-sm-inline px-2">|</span>&nbsp;@Html.DisplayFor(model => rank)</h2>
            <hr class="" />
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonnelId)
        <div class="form-group">
        </div>

        <div class="form-row">
            <div class="form-group col-md-1 mr-md-2 mr-lg-0">
                @Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EnumDropDownListFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md">
                @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md">
                @Html.LabelFor(model => model.DOD, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => dob, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-outline-dark" />
            </div>
        </div>
    </form>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
